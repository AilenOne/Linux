# if 0
#include <sys/types.h>
#include <sys/stat.h>
#include <errno.h>
#include <fcntl.h>
#define FIFO_SERVER "/Test/Pthread/fifoserver"
 
int main(int argc,char** argv)
{
       int fd;
       char w_buf[4096*2]="adadadadadasasdasdsad";
       int real_wnum;
       memset(w_buf,0,4096*2);
       if((mkfifo(FIFO_SERVER,O_CREAT|O_EXCL|S_IRWXU)<0)&&(errno!=EEXIST))
              printf("cannot create fifoserver\n");
 
       //fd=open(FIFO_SERVER,O_WRONLY,0);
     
     fd=open(FIFO_SERVER,O_WRONLY|O_NONBLOCK,0);
     if(fd==-1)
              if(errno==ENXIO)
                     printf("open error; no reading process\n");
  
       
       real_wnum=write(fd,w_buf,2048);
       if(real_wnum==-1)
       {
              if(errno==EAGAIN)
                     printf("write to fifo error; try later\n");
       }
       
       printf("real write num is %d\n",real_wnum);
       real_wnum=write(fd,w_buf,5000);
       //real_wnum=write(fd,w_buf,4096);
       if(real_wnum==-1)
              if(errno==EAGAIN)
                     printf("try later\n");
}

#endif


#include <sys/types.h>
#include <sys/stat.h>
#include <errno.h>
#include <fcntl.h>

#include <unistd.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define FIFO_SERVER "/Test/Pthread/fifoserver"

main(int argc,char** argv)
{
	char r_buf[4096*2];
	int  fd;
	int  r_size;
	int  ret_size;
	r_size=atoi(argv[1]);
	printf("requred real read bytes %d\n",r_size);
	memset(r_buf,0,sizeof(r_buf));
	fd=open(FIFO_SERVER,O_RDONLY|O_NONBLOCK,0);
	//fd=open(FIFO_SERVER,O_RDONLY,0);

	if(fd==-1)
	{
		printf("open %s for read error\n", strerror(errno));
		exit(-1);	
	}
    printf("open ok\n");
	while(1)
	{
		
		memset(r_buf,0,sizeof(r_buf));
		ret_size=read(fd,r_buf,r_size);
		if(ret_size==-1)
			if(errno==EAGAIN)
				printf("no data avlaible\n");
		printf("real read bytes %d\n",ret_size);
		sleep(1);
	}	
	pause();
	unlink(FIFO_SERVER);
}
